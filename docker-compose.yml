version: '3.8'

services:
  # webapp:
  #   build:
  #     context: ./dockerfiles
  #     dockerfile: webapp.dockerfile
  #   ports:
  #     - 8080:80
  #   user: ${CURRENT_UID}

  #################################
  #           BACKEND             #
  #################################
  server:
    image: nginx:stable-alpine
    ports:
      - '8000:80'
    env_file:
      - ./env/laravel.env
    volumes:
      - './server:/var/www/html'
      - './nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro'
    depends_on:
      - php
      - database
      
  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
    env_file:
      - ./env/laravel.env
    volumes:
      - ./server:/var/www/html:delegated
    user: ${CURRENT_UID}

  #################################
  #           DATABASE            #
  #################################
  database:
    image: postgres:13
    env_file:
      - ./env/postgres.env
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "hifive", "-d", "hifive"]
      interval: 5s
      retries: 5
    restart: always

  # Utilities
  composer:
    build: 
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    env_file:
      - ./env/laravel.env
    volumes:
      - ./server:/var/www/html
    user: ${CURRENT_UID}

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
    env_file:
      - ./env/laravel.env
    volumes:
      - ./server:/var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]
    user: ${CURRENT_UID}

volumes:
  postgres-db-volume: